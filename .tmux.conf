set -g default-terminal "xterm-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

# for Cmd key(Ghostty)
set -ag terminal-overrides ",xterm-ghostty:RGB,xterm-ghostty:Tc"
set -g default-terminal "xterm-ghostty"

# enable mouse support
set -g mouse on

set -g base-index 1
setw -g pane-base-index 1

# Reduced delay in escape sequences
set -sg escape-time 10

# customize status bar
set -g status-style 'bg=#08090D fg=#5eacd3'
set -g status-left-length 30
set -g status-left '#[fg=green]#S '  # show session name
set -g status-right '#[fg=yellow]%H:%M'

# Maintain current path when splitting a pane
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# using vim key-bind when copy mode
setw -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

set -g pane-border-style 'fg=#444444'
set -g pane-active-border-style 'fg=#5eacd3'

bind r source-file ~/.tmux.conf \; display "Config reloaded!"


# Extended keyboard sequences support for Cmd keys
set -s extended-keys on
set -as terminal-features "xterm-ghostty:extkeys"

# CSI u mode for better key handling
set -g xterm-keys on
set -ga terminal-overrides ",xterm*:sitm=\\E[3m"

# Smart pane switching with awareness of Vim splits and Claude
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_claude="ps -o state= -o comm= -t '#{pane_tty}' | grep -q claude"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_claude" 'send-keys C-j' "if-shell \"$is_vim\" 'send-keys C-j' 'select-pane -D'"
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R

# ToggleTerm key bindings - ensure they reach nvim
# @ symbol mapping for different terminals  
bind-key -n 'C-S-@' if-shell "$is_vim" 'send-keys C-S-@' 'display-message "Not in vim"'
bind-key -n 'C-@' if-shell "$is_vim" 'send-keys C-@' 'display-message "Not in vim"'
bind-key -n 'C-S-2' if-shell "$is_vim" 'send-keys C-S-2' 'display-message "Not in vim"'
bind-key -n 'F12' if-shell "$is_vim" 'send-keys F12' 'display-message "Not in vim"'
